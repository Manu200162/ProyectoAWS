AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: My Lambda Resources
Resources:
  GetCustomer:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getCustomer
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.getCustomer
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: FedExTable
      Events:
        GetCustomer:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /customer/{customer_id}
            Method: GET
  PutCustomer:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putCustomer
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.putCustomer
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: FedExTable
      Events:
        PutCustomer:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /customer/{customer_id}
            Method: PUT
  GetPackage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPackage
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.getPackage
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: FedExTable
      Events:
        GetPackage:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /package/{package_id}
            Method: GET
  PutPackage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putPackage
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.putPackage
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: FedExTable
      Events:
        PutPackage:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /package/{package_id}
            Method: PUT
  GetCustomerPackageState:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getCustomerPackageState
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.getCustomerPackageState
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: FedExTable
      Events:
        GetCustomerPackageState:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /customer/{customer_id}/package/{package_id}
            Method: GET
  PutCustomerAndPackage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putCustomerAndPackage
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: fedex.putCustomerAndPackage
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: FedExTable
      Events:
        PutCustomerAndPackage:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /customer/{customer_id}/package/{package_id}
            Method: PUT
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: fedex-app
      StageName: prod
      Cors:
        AllowMethods: '''POST,OPTIONS, GET, PUT'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://fedex-bucket-8888/3c2eb9e13c2ccfdaa98af866113a7130
  FedExTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: fedex-app
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
  S3BucketFedexWeb:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: fedex-bucket-website-uno
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
        - AllowedOrigins:
          - '*'
          AllowedHeaders:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          - POST
          - DELETE
          - HEAD
  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3BucketFedexWeb
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - Fn::Join:
            - /
            - - Fn::GetAtt:
                - S3BucketFedexWeb
                - Arn
              - '*'
          Principal: '*'
  MyLambda1:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fedex-lambda
      Environment:
        Variables:
          FEDEX_TABLE:
            Ref: FedExTable
      Handler: lambda.handler
      Runtime: python3.6
      CodeUri: s3://fedex-bucket-8888/ebe57876e1fd70573ef51b2ba1c87aa7
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - MyLambda1
          - Arn
        Protocol: lambda
      - Endpoint: testn@email.com
        Protocol: email
      - Endpoint: llubylinares@gmail.com
        Protocol: email
      TopicName: Fedex-Topic
